{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samuel\\\\Escritorio\\\\react_js_front_backend\\\\crud_react.js\\\\src\\\\components\\\\student\\\\BotonExcelEstilizado.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, Spinner } from \"reactstrap\";\nimport * as XLSX from \"xlsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BotonExcelEstilizado = ({\n  usuarios\n}) => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const titulo = [{\n    A: \"Reporte de Usuarios\"\n  }, {}];\n  const informacionAdicional = {\n    A: \"Creado por samu: 24/8/2023\"\n  };\n  const longitudes = [5, 35, 25, 20, 10, 10, 10];\n  const handleDownload = () => {\n    setLoading(true);\n    let tabla = [{\n      A: \"Id\",\n      B: \"Nombre\",\n      C: \"Gmail\"\n    }];\n    usuarios.forEach(usuario => {\n      tabla.push({\n        A: usuario.id,\n        B: usuario.nombre,\n        C: usuario.gmail\n      });\n    });\n    const dataFinal = [...titulo, ...tabla, informacionAdicional];\n    setTimeout(() => {\n      creandoArchivo(dataFinal);\n      setLoading(false);\n    }, 1000);\n  };\n  const creandoArchivo = dataFinal => {\n    const libro = XLSX.utils.book_new();\n    const hoja = XLSX.utils.json_to_sheet(dataFinal, {\n      skipHeader: true\n    });\n    hoja[\"!merges\"] = [XLSX.utils.decode_range(\"A1:G1\"), XLSX.utils.decode_range(\"A2:G2\"), XLSX.utils.decode_range(\"A34:G34\")];\n    let propiedades = [];\n    longitudes.forEach(col => {\n      propiedades.push({\n        width: col\n      });\n    });\n    hoja[\"!cols\"] = propiedades;\n    XLSX.utils.book_append_sheet(libro, hoja, \"Usuarios\");\n    XLSX.writeFile(libro, \"Lista de usarios.xlsx\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !loading ? /*#__PURE__*/_jsxDEV(Button, {\n      color: \"success\",\n      onClick: handleDownload,\n      children: \"Excel Generado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      color: \"success\",\n      disabled: true,\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {\n        size: \"sm\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" Generando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(BotonExcelEstilizado, \"/Rjh5rPqCCqf0XYnTUk9ZNavw3Q=\");\n_c = BotonExcelEstilizado;\nexport default BotonExcelEstilizado;\nvar _c;\n$RefreshReg$(_c, \"BotonExcelEstilizado\");","map":{"version":3,"names":["React","useState","Button","Spinner","XLSX","jsxDEV","_jsxDEV","Fragment","_Fragment","BotonExcelEstilizado","usuarios","_s","loading","setLoading","titulo","A","informacionAdicional","longitudes","handleDownload","tabla","B","C","forEach","usuario","push","id","nombre","gmail","dataFinal","setTimeout","creandoArchivo","libro","utils","book_new","hoja","json_to_sheet","skipHeader","decode_range","propiedades","col","width","book_append_sheet","writeFile","children","color","onClick","fileName","_jsxFileName","lineNumber","columnNumber","disabled","size","_c","$RefreshReg$"],"sources":["C:/Users/samuel/Escritorio/react_js_front_backend/crud_react.js/src/components/student/BotonExcelEstilizado.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Spinner } from \"reactstrap\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nconst BotonExcelEstilizado = ({ usuarios }) => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const titulo = [{ A: \"Reporte de Usuarios\" }, {}];\r\n\r\n  const informacionAdicional = {\r\n    A: \"Creado por samu: 24/8/2023\",\r\n  };\r\n\r\n  const longitudes = [5, 35, 25, 20, 10, 10, 10];\r\n\r\n  const handleDownload = () => {\r\n    setLoading(true);\r\n\r\n    let tabla = [\r\n      {\r\n        A: \"Id\",\r\n        B: \"Nombre\",\r\n        C: \"Gmail\"\r\n       \r\n      },\r\n    ];\r\n\r\n    usuarios.forEach((usuario) => {\r\n      tabla.push({\r\n        A: usuario.id,\r\n        B: usuario.nombre,\r\n        C: usuario.gmail\r\n        \r\n      });\r\n    });\r\n\r\n    const dataFinal = [...titulo, ...tabla, informacionAdicional];\r\n\r\n    setTimeout(() => {\r\n      creandoArchivo(dataFinal);\r\n      setLoading(false);\r\n    }, 1000);\r\n  };\r\n\r\n  const creandoArchivo = (dataFinal) => {\r\n    const libro = XLSX.utils.book_new();\r\n\r\n    const hoja = XLSX.utils.json_to_sheet(dataFinal, { skipHeader: true });\r\n\r\n    hoja[\"!merges\"] = [\r\n      XLSX.utils.decode_range(\"A1:G1\"),\r\n      XLSX.utils.decode_range(\"A2:G2\"),\r\n      XLSX.utils.decode_range(\"A34:G34\"),\r\n    ];\r\n\r\n    let propiedades = [];\r\n\r\n    longitudes.forEach((col) => {\r\n      propiedades.push({\r\n        width: col,\r\n      });\r\n    });\r\n\r\n    hoja[\"!cols\"] = propiedades;\r\n\r\n    XLSX.utils.book_append_sheet(libro, hoja, \"Usuarios\");\r\n\r\n    XLSX.writeFile(libro, \"Lista de usarios.xlsx\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!loading ? (\r\n        <Button color=\"success\" onClick={handleDownload}>\r\n          Excel Generado\r\n        </Button>\r\n      ) : (\r\n        <Button color=\"success\" disabled>\r\n          <Spinner size=\"sm\">Loading...</Spinner>\r\n          <span> Generando...</span>\r\n        </Button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BotonExcelEstilizado;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,OAAO,QAAQ,YAAY;AAC5C,OAAO,KAAKC,IAAI,MAAM,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7B,MAAMC,oBAAoB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMa,MAAM,GAAG,CAAC;IAAEC,CAAC,EAAE;EAAsB,CAAC,EAAE,CAAC,CAAC,CAAC;EAEjD,MAAMC,oBAAoB,GAAG;IAC3BD,CAAC,EAAE;EACL,CAAC;EAED,MAAME,UAAU,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EAE9C,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3BL,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAIM,KAAK,GAAG,CACV;MACEJ,CAAC,EAAE,IAAI;MACPK,CAAC,EAAE,QAAQ;MACXC,CAAC,EAAE;IAEL,CAAC,CACF;IAEDX,QAAQ,CAACY,OAAO,CAAEC,OAAO,IAAK;MAC5BJ,KAAK,CAACK,IAAI,CAAC;QACTT,CAAC,EAAEQ,OAAO,CAACE,EAAE;QACbL,CAAC,EAAEG,OAAO,CAACG,MAAM;QACjBL,CAAC,EAAEE,OAAO,CAACI;MAEb,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,MAAMC,SAAS,GAAG,CAAC,GAAGd,MAAM,EAAE,GAAGK,KAAK,EAAEH,oBAAoB,CAAC;IAE7Da,UAAU,CAAC,MAAM;MACfC,cAAc,CAACF,SAAS,CAAC;MACzBf,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMiB,cAAc,GAAIF,SAAS,IAAK;IACpC,MAAMG,KAAK,GAAG3B,IAAI,CAAC4B,KAAK,CAACC,QAAQ,CAAC,CAAC;IAEnC,MAAMC,IAAI,GAAG9B,IAAI,CAAC4B,KAAK,CAACG,aAAa,CAACP,SAAS,EAAE;MAAEQ,UAAU,EAAE;IAAK,CAAC,CAAC;IAEtEF,IAAI,CAAC,SAAS,CAAC,GAAG,CAChB9B,IAAI,CAAC4B,KAAK,CAACK,YAAY,CAAC,OAAO,CAAC,EAChCjC,IAAI,CAAC4B,KAAK,CAACK,YAAY,CAAC,OAAO,CAAC,EAChCjC,IAAI,CAAC4B,KAAK,CAACK,YAAY,CAAC,SAAS,CAAC,CACnC;IAED,IAAIC,WAAW,GAAG,EAAE;IAEpBrB,UAAU,CAACK,OAAO,CAAEiB,GAAG,IAAK;MAC1BD,WAAW,CAACd,IAAI,CAAC;QACfgB,KAAK,EAAED;MACT,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFL,IAAI,CAAC,OAAO,CAAC,GAAGI,WAAW;IAE3BlC,IAAI,CAAC4B,KAAK,CAACS,iBAAiB,CAACV,KAAK,EAAEG,IAAI,EAAE,UAAU,CAAC;IAErD9B,IAAI,CAACsC,SAAS,CAACX,KAAK,EAAE,uBAAuB,CAAC;EAChD,CAAC;EAED,oBACEzB,OAAA,CAAAE,SAAA;IAAAmC,QAAA,EACG,CAAC/B,OAAO,gBACPN,OAAA,CAACJ,MAAM;MAAC0C,KAAK,EAAC,SAAS;MAACC,OAAO,EAAE3B,cAAe;MAAAyB,QAAA,EAAC;IAEjD;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAET3C,OAAA,CAACJ,MAAM;MAAC0C,KAAK,EAAC,SAAS;MAACM,QAAQ;MAAAP,QAAA,gBAC9BrC,OAAA,CAACH,OAAO;QAACgD,IAAI,EAAC,IAAI;QAAAR,QAAA,EAAC;MAAU;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eACvC3C,OAAA;QAAAqC,QAAA,EAAM;MAAa;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB;EACT,gBACD,CAAC;AAEP,CAAC;AAACtC,EAAA,CAhFIF,oBAAoB;AAAA2C,EAAA,GAApB3C,oBAAoB;AAkF1B,eAAeA,oBAAoB;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}